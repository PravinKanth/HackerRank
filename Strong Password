import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'minimumNumber' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. STRING password
     */

    public static int minimumNumber(int n, String b) {
           int inte=1;
        int low=1;
        int upp=1;
        int spe=1;
        char[] c=b.toCharArray();
        char[] d=new char[]{'!','@','#','$','%','^','&','*','(',')','-','+'};
        for(char i:c){
            if(Character.isDigit(i)){
                inte=0;
            }
            if(Character.isLowerCase(i)){
                low=0;
            }
            if(Character.isUpperCase(i)){
                upp=0;
            }
            for(char r:d){
                if(i==r){
                    spe=0;
                }
            }
        }
        int ans=0;
        int total=inte+low+upp+spe;
        if(c.length+total<6){
            ans=6-(c.length+total)+total;
        }
        else{
            ans=total;
        }

return ans;

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String password = bufferedReader.readLine();

        int answer = Result.minimumNumber(n, password);

        bufferedWriter.write(String.valueOf(answer));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
