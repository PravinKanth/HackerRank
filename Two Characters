import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {


    public static int alternate(String s) {
              char[] c=s.toCharArray();
        TreeSet<String> set =new TreeSet<>();
        for(char q:c){
            set.add(String.valueOf(q));
        }
        String a="";
        ArrayList<String> arr=new ArrayList<>();
        for(String b:set){
            arr.add(b);
        }
        ArrayList<String> arr1=new ArrayList<>();
        for(char b1:c){
            arr1.add(String.valueOf(b1));
        }

        ArrayList<String> brr=new ArrayList<>();
        for(int i=0;i<set.size()-1;i++){
            for(int j=i+1;j<set.size();j++){
                brr.add(arr.get(i));
                brr.add(arr.get(j));

            }
        }
        boolean flag=true;
        ArrayList<Integer> tot=new ArrayList<>();
        int count=0;
        String a1="";
        String a2="";
for(int e=0;e<brr.size();e+=2){
    a1=brr.get(e);
    a2=brr.get(e+1);
    ArrayList<String> z=new ArrayList<>();
    TreeSet<String> tre=new TreeSet<>();
    for(String as:arr1){
        if(as.equals(a1) || as.equals(a2)){
            z.add(as);

        }


    }
    for(String gh:z){
        tre.add(gh);


    }
    
    flag=true;
    for(int t=0;t<z.size()-1;t++){
        if((z.get(t).equals(z.get(t+1))) ){
            flag=false;
            break;
        }

    }

    if(flag){
        tot.add(z.size());
    }
    z.clear();
    tre.clear();
}


int max=0;
for(int ans:tot){
    if(ans>max){
        max=ans;
    }

}
return max;
    

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int l = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int result = Result.alternate(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
